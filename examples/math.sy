# The return value from the last expression is the exit code
# of the program.

# For more information about functions and the language
# see `factorial.sy`.

# This is a basic math expression
2 * 3 / 1 - 2

int: test_function(int: a, int: x) := int: (int: a, int: x){
    x := 33;
    a := 99
    x := 10
    a := 100;
    # Following is the syntax for a lambda function.
    # These aren't completely supported yet.
    # func : bar := [int (int: w) { w }]
    a := 10;
    x
}

2 * 3 + 1 - 2

# Following is the syntax for a lambda function.
# These aren't completely supported yet.
# [int (int: w) { w := 10 }]

int : a := 10;

a

4 >> 2

2 << 3
